// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register render 1`] = `
<UserProvider>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Register>
        <div
          className="register"
        >
          <div
            className="view"
          >
            <form>
              <Input
                autoComplete="email"
                name="email"
                onChange={[Function]}
                placeholder="email"
                rightIcon="user"
                title="User"
                validate={[Function]}
                value=""
              >
                <div
                  className="input"
                >
                  <div
                    className="label"
                  >
                    User
                  </div>
                  <div
                    className="inputWrapper"
                  >
                    <input
                      autoComplete="email"
                      className="textField"
                      name="email"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="email"
                      type="text"
                      value=""
                    />
                    <Icon
                      name="user"
                      svgStyle={
                        Object {
                          "className": "rightIcon",
                          "height": 24,
                          "width": 24,
                        }
                      }
                    >
                      <i
                        className="icon"
                      >
                        <default
                          className="rightIcon"
                          height={24}
                          width={24}
                        />
                      </i>
                    </Icon>
                  </div>
                </div>
              </Input>
              This is should be a register page...
              <Button
                title="Login"
                to="login"
                type="default"
              >
                <NavLink
                  activeClassName="activeLink"
                  className="button primary"
                  to="login"
                >
                  <Link
                    aria-current={null}
                    className="button primary"
                    to="login"
                  >
                    <a
                      aria-current={null}
                      className="button primary"
                      href="/login"
                      onClick={[Function]}
                    >
                      <div
                        className="inner"
                      >
                        <p
                          className="text"
                        >
                          Login
                        </p>
                      </div>
                    </a>
                  </Link>
                </NavLink>
              </Button>
              <Button
                onClick={[Function]}
                title="Register"
                type="default"
              >
                <button
                  className="button primary"
                  onClick={[Function]}
                >
                  <p>
                    Register
                  </p>
                </button>
              </Button>
            </form>
            <Loader
              active={false}
            >
              <div
                className="loader"
              >
                <PoseGroup
                  flipMove={true}
                >
                  <Transition
                    enterAfterExit={false}
                    enterPose="enter"
                    exitPose="exit"
                    flipMove={true}
                    preEnterPose="exit"
                  />
                </PoseGroup>
              </div>
            </Loader>
          </div>
        </div>
      </Register>
    </Router>
  </BrowserRouter>
</UserProvider>
`;
